{
    // scope:
    //
    // source.php meta.function-call-object
    // source.php variable.other.member
    // source.php variable.other.property

    "scope": "source.php meta.function-call-object, source.php variable.other.member, source.php variable.other.property",
    "completions": [
        {"trigger":"appendErrorsToException","contents":"appendErrorsToException(${1:errors}, ${2:exception});","kind":["function","m","Method"],"annotation":"appendErrorsToException($errors, $exception)","details":"appendErrorsToException($errors, $exception)"},
        {"trigger":"appendExceptionToException","contents":"appendExceptionToException(${1:exceptionToAppend}, ${2:exception});","kind":["function","m","Method"],"annotation":"appendExceptionToException($exceptionToAppend, $exception)","details":"appendExceptionToException($exceptionToAppend, $exception)"},
        {"trigger":"appendMessageToException","contents":"appendMessageToException(${1:message}, ${2:exception});","kind":["function","m","Method"],"annotation":"appendMessageToException($message, $exception)","details":"appendMessageToException($message, $exception)"},
        {"trigger":"assertAccepted","contents":"assertAccepted();","kind":["function","m","Method"],"annotation":"assertAccepted()","details":"assertAccepted()"},
        {"trigger":"assertAuthenticated","contents":"assertAuthenticated($1);","kind":["function","m","Method"],"annotation":"assertAuthenticated($1)","details":"assertAuthenticated($1)"},
        {"trigger":"assertAuthenticatedAs","contents":"assertAuthenticatedAs(${1:user});","kind":["function","m","Method"],"annotation":"assertAuthenticatedAs($user)","details":"assertAuthenticatedAs($user)"},
        {"trigger":"assertBadRequest","contents":"assertBadRequest();","kind":["function","m","Method"],"annotation":"assertBadRequest()","details":"assertBadRequest()"},
        {"trigger":"assertConflict","contents":"assertConflict();","kind":["function","m","Method"],"annotation":"assertConflict()","details":"assertConflict()"},
        {"trigger":"assertContent","contents":"assertContent(${1:value});","kind":["function","m","Method"],"annotation":"assertContent($value)","details":"assertContent($value)"},
        {"trigger":"assertCookie","contents":"assertCookie(${1:cookieName});","kind":["function","m","Method"],"annotation":"assertCookie($cookieName)","details":"assertCookie($cookieName)"},
        {"trigger":"assertCookieExpired","contents":"assertCookieExpired(${1:cookieName});","kind":["function","m","Method"],"annotation":"assertCookieExpired($cookieName)","details":"assertCookieExpired($cookieName)"},
        {"trigger":"assertCookieMissing","contents":"assertCookieMissing(${1:cookieName});","kind":["function","m","Method"],"annotation":"assertCookieMissing($cookieName)","details":"assertCookieMissing($cookieName)"},
        {"trigger":"assertCookieNotExpired","contents":"assertCookieNotExpired(${1:cookieName});","kind":["function","m","Method"],"annotation":"assertCookieNotExpired($cookieName)","details":"assertCookieNotExpired($cookieName)"},
        {"trigger":"assertCreated","contents":"assertCreated();","kind":["function","m","Method"],"annotation":"assertCreated()","details":"assertCreated()"},
        {"trigger":"assertCredentials","contents":"assertCredentials(${1:array:credentials});","kind":["function","m","Method"],"annotation":"assertCredentials(array $credentials)","details":"assertCredentials(array $credentials)"},
        {"trigger":"assertDatabaseCount","contents":"assertDatabaseCount(${1:table}, ${2:int:count});","kind":["function","m","Method"],"annotation":"assertDatabaseCount($table, int $count)","details":"assertDatabaseCount($table, int $count)"},
        {"trigger":"assertDatabaseEmpty","contents":"assertDatabaseEmpty(${1:table});","kind":["function","m","Method"],"annotation":"assertDatabaseEmpty($table)","details":"assertDatabaseEmpty($table)"},
        {"trigger":"assertDatabaseHas","contents":"assertDatabaseHas(${1:table}, ${2:array:data});","kind":["function","m","Method"],"annotation":"assertDatabaseHas($table, array $data)","details":"assertDatabaseHas($table, array $data)"},
        {"trigger":"assertDatabaseMissing","contents":"assertDatabaseMissing(${1:table}, ${2:array:data});","kind":["function","m","Method"],"annotation":"assertDatabaseMissing($table, array $data)","details":"assertDatabaseMissing($table, array $data)"},
        {"trigger":"assertDontSee","contents":"assertDontSee(${1:value});","kind":["function","m","Method"],"annotation":"assertDontSee($value)","details":"assertDontSee($value)"},
        {"trigger":"assertDontSeeText","contents":"assertDontSeeText(${1:value});","kind":["function","m","Method"],"annotation":"assertDontSeeText($value)","details":"assertDontSeeText($value)"},
        {"trigger":"assertDownload","contents":"assertDownload($1);","kind":["function","m","Method"],"annotation":"assertDownload($1)","details":"assertDownload($1)"},
        {"trigger":"assertExactJson","contents":"assertExactJson(${1:array:data});","kind":["function","m","Method"],"annotation":"assertExactJson(array $data)","details":"assertExactJson(array $data)"},
        {"trigger":"assertForbidden","contents":"assertForbidden();","kind":["function","m","Method"],"annotation":"assertForbidden()","details":"assertForbidden()"},
        {"trigger":"assertFound","contents":"assertFound();","kind":["function","m","Method"],"annotation":"assertFound()","details":"assertFound()"},
        {"trigger":"assertGone","contents":"assertGone();","kind":["function","m","Method"],"annotation":"assertGone()","details":"assertGone()"},
        {"trigger":"assertGuest","contents":"assertGuest($1);","kind":["function","m","Method"],"annotation":"assertGuest($1)","details":"assertGuest($1)"},
        {"trigger":"assertHeader","contents":"assertHeader(${1:headerName});","kind":["function","m","Method"],"annotation":"assertHeader($headerName)","details":"assertHeader($headerName)"},
        {"trigger":"assertHeaderMissing","contents":"assertHeaderMissing(${1:headerName});","kind":["function","m","Method"],"annotation":"assertHeaderMissing($headerName)","details":"assertHeaderMissing($headerName)"},
        {"trigger":"assertInternalServerError","contents":"assertInternalServerError();","kind":["function","m","Method"],"annotation":"assertInternalServerError()","details":"assertInternalServerError()"},
        {"trigger":"assertInvalid","contents":"assertInvalid();","kind":["function","m","Method"],"annotation":"assertInvalid()","details":"assertInvalid()"},
        {"trigger":"assertInvalidCredentials","contents":"assertInvalidCredentials(${1:array:credentials});","kind":["function","m","Method"],"annotation":"assertInvalidCredentials(array $credentials)","details":"assertInvalidCredentials(array $credentials)"},
        {"trigger":"assertJson","contents":"assertJson(${1:value});","kind":["function","m","Method"],"annotation":"assertJson($value)","details":"assertJson($value)"},
        {"trigger":"assertJsonCount","contents":"assertJsonCount(${1:int:count});","kind":["function","m","Method"],"annotation":"assertJsonCount(int $count)","details":"assertJsonCount(int $count)"},
        {"trigger":"assertJsonFragment","contents":"assertJsonFragment(${1:array:data});","kind":["function","m","Method"],"annotation":"assertJsonFragment(array $data)","details":"assertJsonFragment(array $data)"},
        {"trigger":"assertJsonIsArray","contents":"assertJsonIsArray($1);","kind":["function","m","Method"],"annotation":"assertJsonIsArray($1)","details":"assertJsonIsArray($1)"},
        {"trigger":"assertJsonIsObject","contents":"assertJsonIsObject($1);","kind":["function","m","Method"],"annotation":"assertJsonIsObject($1)","details":"assertJsonIsObject($1)"},
        {"trigger":"assertJsonMissing","contents":"assertJsonMissing(${1:array:data});","kind":["function","m","Method"],"annotation":"assertJsonMissing(array $data)","details":"assertJsonMissing(array $data)"},
        {"trigger":"assertJsonMissingExact","contents":"assertJsonMissingExact(${1:array:data});","kind":["function","m","Method"],"annotation":"assertJsonMissingExact(array $data)","details":"assertJsonMissingExact(array $data)"},
        {"trigger":"assertJsonMissingPath","contents":"assertJsonMissingPath(${1:string:path});","kind":["function","m","Method"],"annotation":"assertJsonMissingPath(string $path)","details":"assertJsonMissingPath(string $path)"},
        {"trigger":"assertJsonMissingValidationErrors","contents":"assertJsonMissingValidationErrors();","kind":["function","m","Method"],"annotation":"assertJsonMissingValidationErrors()","details":"assertJsonMissingValidationErrors()"},
        {"trigger":"assertJsonPath","contents":"assertJsonPath(${1:path}, ${2:expect});","kind":["function","m","Method"],"annotation":"assertJsonPath($path, $expect)","details":"assertJsonPath($path, $expect)"},
        {"trigger":"assertJsonStructure","contents":"assertJsonStructure();","kind":["function","m","Method"],"annotation":"assertJsonStructure()","details":"assertJsonStructure()"},
        {"trigger":"assertJsonValidationErrorFor","contents":"assertJsonValidationErrorFor(${1:key});","kind":["function","m","Method"],"annotation":"assertJsonValidationErrorFor($key)","details":"assertJsonValidationErrorFor($key)"},
        {"trigger":"assertJsonValidationErrors","contents":"assertJsonValidationErrors(${1:errors});","kind":["function","m","Method"],"annotation":"assertJsonValidationErrors($errors)","details":"assertJsonValidationErrors($errors)"},
        {"trigger":"assertLocation","contents":"assertLocation(${1:uri});","kind":["function","m","Method"],"annotation":"assertLocation($uri)","details":"assertLocation($uri)"},
        {"trigger":"assertMethodNotAllowed","contents":"assertMethodNotAllowed();","kind":["function","m","Method"],"annotation":"assertMethodNotAllowed()","details":"assertMethodNotAllowed()"},
        {"trigger":"assertModelExists","contents":"assertModelExists(${1:model});","kind":["function","m","Method"],"annotation":"assertModelExists($model)","details":"assertModelExists($model)"},
        {"trigger":"assertModelMissing","contents":"assertModelMissing(${1:model});","kind":["function","m","Method"],"annotation":"assertModelMissing($model)","details":"assertModelMissing($model)"},
        {"trigger":"assertMovedPermanently","contents":"assertMovedPermanently();","kind":["function","m","Method"],"annotation":"assertMovedPermanently()","details":"assertMovedPermanently()"},
        {"trigger":"assertNoContent","contents":"assertNoContent($1);","kind":["function","m","Method"],"annotation":"assertNoContent($1)","details":"assertNoContent($1)"},
        {"trigger":"assertNotAcceptable","contents":"assertNotAcceptable();","kind":["function","m","Method"],"annotation":"assertNotAcceptable()","details":"assertNotAcceptable()"},
        {"trigger":"assertNotFound","contents":"assertNotFound();","kind":["function","m","Method"],"annotation":"assertNotFound()","details":"assertNotFound()"},
        {"trigger":"assertNotModified","contents":"assertNotModified();","kind":["function","m","Method"],"annotation":"assertNotModified()","details":"assertNotModified()"},
        {"trigger":"assertNotSoftDeleted","contents":"assertNotSoftDeleted(${1:table});","kind":["function","m","Method"],"annotation":"assertNotSoftDeleted($table)","details":"assertNotSoftDeleted($table)"},
        {"trigger":"assertOk","contents":"assertOk();","kind":["function","m","Method"],"annotation":"assertOk()","details":"assertOk()"},
        {"trigger":"assertPaymentRequired","contents":"assertPaymentRequired();","kind":["function","m","Method"],"annotation":"assertPaymentRequired()","details":"assertPaymentRequired()"},
        {"trigger":"assertPermanentRedirect","contents":"assertPermanentRedirect();","kind":["function","m","Method"],"annotation":"assertPermanentRedirect()","details":"assertPermanentRedirect()"},
        {"trigger":"assertPlainCookie","contents":"assertPlainCookie(${1:cookieName});","kind":["function","m","Method"],"annotation":"assertPlainCookie($cookieName)","details":"assertPlainCookie($cookieName)"},
        {"trigger":"assertRedirect","contents":"assertRedirect($1);","kind":["function","m","Method"],"annotation":"assertRedirect($1)","details":"assertRedirect($1)"},
        {"trigger":"assertRedirectContains","contents":"assertRedirectContains(${1:uri});","kind":["function","m","Method"],"annotation":"assertRedirectContains($uri)","details":"assertRedirectContains($uri)"},
        {"trigger":"assertRedirectToRoute","contents":"assertRedirectToRoute(${1:name});","kind":["function","m","Method"],"annotation":"assertRedirectToRoute($name)","details":"assertRedirectToRoute($name)"},
        {"trigger":"assertRedirectToSignedRoute","contents":"assertRedirectToSignedRoute();","kind":["function","m","Method"],"annotation":"assertRedirectToSignedRoute()","details":"assertRedirectToSignedRoute()"},
        {"trigger":"assertRequestTimeout","contents":"assertRequestTimeout();","kind":["function","m","Method"],"annotation":"assertRequestTimeout()","details":"assertRequestTimeout()"},
        {"trigger":"assertSee","contents":"assertSee(${1:value});","kind":["function","m","Method"],"annotation":"assertSee($value)","details":"assertSee($value)"},
        {"trigger":"assertSeeInOrder","contents":"assertSeeInOrder(${1:array:values});","kind":["function","m","Method"],"annotation":"assertSeeInOrder(array $values)","details":"assertSeeInOrder(array $values)"},
        {"trigger":"assertSeeText","contents":"assertSeeText(${1:value});","kind":["function","m","Method"],"annotation":"assertSeeText($value)","details":"assertSeeText($value)"},
        {"trigger":"assertSeeTextInOrder","contents":"assertSeeTextInOrder(${1:array:values});","kind":["function","m","Method"],"annotation":"assertSeeTextInOrder(array $values)","details":"assertSeeTextInOrder(array $values)"},
        {"trigger":"assertServerError","contents":"assertServerError();","kind":["function","m","Method"],"annotation":"assertServerError()","details":"assertServerError()"},
        {"trigger":"assertServiceUnavailable","contents":"assertServiceUnavailable();","kind":["function","m","Method"],"annotation":"assertServiceUnavailable()","details":"assertServiceUnavailable()"},
        {"trigger":"assertSessionDoesntHaveErrors","contents":"assertSessionDoesntHaveErrors();","kind":["function","m","Method"],"annotation":"assertSessionDoesntHaveErrors()","details":"assertSessionDoesntHaveErrors()"},
        {"trigger":"assertSessionHas","contents":"assertSessionHas(${1:key});","kind":["function","m","Method"],"annotation":"assertSessionHas($key)","details":"assertSessionHas($key)"},
        {"trigger":"assertSessionHasAll","contents":"assertSessionHasAll(${1:array:bindings});","kind":["function","m","Method"],"annotation":"assertSessionHasAll(array $bindings)","details":"assertSessionHasAll(array $bindings)"},
        {"trigger":"assertSessionHasErrors","contents":"assertSessionHasErrors();","kind":["function","m","Method"],"annotation":"assertSessionHasErrors()","details":"assertSessionHasErrors()"},
        {"trigger":"assertSessionHasErrorsIn","contents":"assertSessionHasErrorsIn(${1:errorBag});","kind":["function","m","Method"],"annotation":"assertSessionHasErrorsIn($errorBag)","details":"assertSessionHasErrorsIn($errorBag)"},
        {"trigger":"assertSessionHasInput","contents":"assertSessionHasInput(${1:key});","kind":["function","m","Method"],"annotation":"assertSessionHasInput($key)","details":"assertSessionHasInput($key)"},
        {"trigger":"assertSessionHasNoErrors","contents":"assertSessionHasNoErrors();","kind":["function","m","Method"],"annotation":"assertSessionHasNoErrors()","details":"assertSessionHasNoErrors()"},
        {"trigger":"assertSessionMissing","contents":"assertSessionMissing(${1:key});","kind":["function","m","Method"],"annotation":"assertSessionMissing($key)","details":"assertSessionMissing($key)"},
        {"trigger":"assertSimilarJson","contents":"assertSimilarJson(${1:array:data});","kind":["function","m","Method"],"annotation":"assertSimilarJson(array $data)","details":"assertSimilarJson(array $data)"},
        {"trigger":"assertSoftDeleted","contents":"assertSoftDeleted(${1:table});","kind":["function","m","Method"],"annotation":"assertSoftDeleted($table)","details":"assertSoftDeleted($table)"},
        {"trigger":"assertStatus","contents":"assertStatus(${1:status});","kind":["function","m","Method"],"annotation":"assertStatus($status)","details":"assertStatus($status)"},
        {"trigger":"assertStreamedContent","contents":"assertStreamedContent(${1:value});","kind":["function","m","Method"],"annotation":"assertStreamedContent($value)","details":"assertStreamedContent($value)"},
        {"trigger":"assertSuccessful","contents":"assertSuccessful();","kind":["function","m","Method"],"annotation":"assertSuccessful()","details":"assertSuccessful()"},
        {"trigger":"assertTemporaryRedirect","contents":"assertTemporaryRedirect();","kind":["function","m","Method"],"annotation":"assertTemporaryRedirect()","details":"assertTemporaryRedirect()"},
        {"trigger":"assertThrows","contents":"assertThrows(${1:Closure:test});","kind":["function","m","Method"],"annotation":"assertThrows(Closure $test)","details":"assertThrows(Closure $test)"},
        {"trigger":"assertTooManyRequests","contents":"assertTooManyRequests();","kind":["function","m","Method"],"annotation":"assertTooManyRequests()","details":"assertTooManyRequests()"},
        {"trigger":"assertUnauthorized","contents":"assertUnauthorized();","kind":["function","m","Method"],"annotation":"assertUnauthorized()","details":"assertUnauthorized()"},
        {"trigger":"assertUnprocessable","contents":"assertUnprocessable();","kind":["function","m","Method"],"annotation":"assertUnprocessable()","details":"assertUnprocessable()"},
        {"trigger":"assertUnsupportedMediaType","contents":"assertUnsupportedMediaType();","kind":["function","m","Method"],"annotation":"assertUnsupportedMediaType()","details":"assertUnsupportedMediaType()"},
        {"trigger":"assertValid","contents":"assertValid();","kind":["function","m","Method"],"annotation":"assertValid()","details":"assertValid()"},
        {"trigger":"assertViewHas","contents":"assertViewHas(${1:key});","kind":["function","m","Method"],"annotation":"assertViewHas($key)","details":"assertViewHas($key)"},
        {"trigger":"assertViewHasAll","contents":"assertViewHasAll(${1:array:bindings});","kind":["function","m","Method"],"annotation":"assertViewHasAll(array $bindings)","details":"assertViewHasAll(array $bindings)"},
        {"trigger":"assertViewIs","contents":"assertViewIs(${1:value});","kind":["function","m","Method"],"annotation":"assertViewIs($value)","details":"assertViewIs($value)"},
        {"trigger":"assertViewMissing","contents":"assertViewMissing(${1:key});","kind":["function","m","Method"],"annotation":"assertViewMissing($key)","details":"assertViewMissing($key)"},
        {"trigger":"collect","contents":"collect($1);","kind":["function","m","Method"],"annotation":"collect($1)","details":"collect($1)"},
        {"trigger":"createTestResponse","contents":"createTestResponse(${1:response});","kind":["function","m","Method"],"annotation":"createTestResponse($response)","details":"createTestResponse($response)"},
        {"trigger":"dd","contents":"dd();","kind":["function","m","Method"],"annotation":"dd()","details":"dd()"},
        {"trigger":"ddHeaders","contents":"ddHeaders();","kind":["function","m","Method"],"annotation":"ddHeaders()","details":"ddHeaders()"},
        {"trigger":"ddSession","contents":"ddSession($1);","kind":["function","m","Method"],"annotation":"ddSession($1)","details":"ddSession($1)"},
        {"trigger":"decodeResponseJson","contents":"decodeResponseJson();","kind":["function","m","Method"],"annotation":"decodeResponseJson()","details":"decodeResponseJson()"},
        {"trigger":"dump","contents":"dump($1);","kind":["function","m","Method"],"annotation":"dump($1)","details":"dump($1)"},
        {"trigger":"dumpHeaders","contents":"dumpHeaders();","kind":["function","m","Method"],"annotation":"dumpHeaders()","details":"dumpHeaders()"},
        {"trigger":"dumpSession","contents":"dumpSession($1);","kind":["function","m","Method"],"annotation":"dumpSession($1)","details":"dumpSession($1)"},
        {"trigger":"ensureResponseHasView","contents":"ensureResponseHasView();","kind":["function","m","Method"],"annotation":"ensureResponseHasView()","details":"ensureResponseHasView()"},
        {"trigger":"expectsDatabaseQueryCount","contents":"expectsDatabaseQueryCount(${1:expected});","kind":["function","m","Method"],"annotation":"expectsDatabaseQueryCount($expected)","details":"expectsDatabaseQueryCount($expected)"},
        {"trigger":"flushMacros","contents":"flushMacros();","kind":["function","m","Method"],"annotation":"flushMacros()","details":"flushMacros()"},
        {"trigger":"freezeSecond","contents":"freezeSecond($1);","kind":["function","m","Method"],"annotation":"freezeSecond($1)","details":"freezeSecond($1)"},
        {"trigger":"freezeTime","contents":"freezeTime($1);","kind":["function","m","Method"],"annotation":"freezeTime($1)","details":"freezeTime($1)"},
        {"trigger":"fromBaseResponse","contents":"fromBaseResponse(${1:response});","kind":["function","m","Method"],"annotation":"fromBaseResponse($response)","details":"fromBaseResponse($response)"},
        {"trigger":"getCookie","contents":"getCookie(${1:cookieName});","kind":["function","m","Method"],"annotation":"getCookie($cookieName)","details":"getCookie($cookieName)"},
        {"trigger":"getDeletedAtColumn","contents":"getDeletedAtColumn(${1:table});","kind":["function","m","Method"],"annotation":"getDeletedAtColumn($table)","details":"getDeletedAtColumn($table)"},
        {"trigger":"hasMacro","contents":"hasMacro(${1:name});","kind":["function","m","Method"],"annotation":"hasMacro($name)","details":"hasMacro($name)"},
        {"trigger":"head","contents":"head(${1:uri});","kind":["function","m","Method"],"annotation":"head($uri)","details":"head($uri)"},
        {"trigger":"json","contents":"json($1);","kind":["function","m","Method"],"annotation":"json($1)","details":"json($1)"},
        {"trigger":"macro","contents":"macro(${1:name}, ${2:macro});","kind":["function","m","Method"],"annotation":"macro($name, $macro)","details":"macro($name, $macro)"},
        {"trigger":"macroCall","contents":"macroCall(${1:method}, ${2:parameters});","kind":["function","m","Method"],"annotation":"macroCall($method, $parameters)","details":"macroCall($method, $parameters)"},
        {"trigger":"mixin","contents":"mixin(${1:mixin});","kind":["function","m","Method"],"annotation":"mixin($mixin)","details":"mixin($mixin)"},
        {"trigger":"offsetExists","contents":"offsetExists(${1:offset});","kind":["function","m","Method"],"annotation":"offsetExists($offset): bool","details":"offsetExists($offset): bool"},
        {"trigger":"offsetGet","contents":"offsetGet(${1:offset});","kind":["function","m","Method"],"annotation":"offsetGet($offset): mixed","details":"offsetGet($offset): mixed"},
        {"trigger":"offsetSet","contents":"offsetSet(${1:offset}, ${2:value});","kind":["function","m","Method"],"annotation":"offsetSet($offset, $value): void","details":"offsetSet($offset, $value): void"},
        {"trigger":"offsetUnset","contents":"offsetUnset(${1:offset});","kind":["function","m","Method"],"annotation":"offsetUnset($offset): void","details":"offsetUnset($offset): void"},
        {"trigger":"responseHasView","contents":"responseHasView();","kind":["function","m","Method"],"annotation":"responseHasView()","details":"responseHasView()"},
        {"trigger":"runTest","contents":"runTest();","kind":["function","m","Method"],"annotation":"runTest(): mixed","details":"runTest(): mixed"},
        {"trigger":"session","contents":"session();","kind":["function","m","Method"],"annotation":"session()","details":"session()"},
        {"trigger":"statusMessageWithDetails","contents":"statusMessageWithDetails(${1:expected}, ${2:actual});","kind":["function","m","Method"],"annotation":"statusMessageWithDetails($expected, $actual)","details":"statusMessageWithDetails($expected, $actual)"},
        {"trigger":"streamedContent","contents":"streamedContent();","kind":["function","m","Method"],"annotation":"streamedContent()","details":"streamedContent()"},
        {"trigger":"tap","contents":"tap($1);","kind":["function","m","Method"],"annotation":"tap($1)","details":"tap($1)"},
        {"trigger":"tearDownAfterClass","contents":"tearDownAfterClass();","kind":["function","m","Method"],"annotation":"tearDownAfterClass(): void","details":"tearDownAfterClass(): void"},
        {"trigger":"transformNotSuccessfulException","contents":"transformNotSuccessfulException(${1:exception});","kind":["function","m","Method"],"annotation":"transformNotSuccessfulException($exception)","details":"transformNotSuccessfulException($exception)"},
        {"trigger":"travel","contents":"travel(${1:value});","kind":["function","m","Method"],"annotation":"travel($value)","details":"travel($value)"},
        {"trigger":"travelBack","contents":"travelBack();","kind":["function","m","Method"],"annotation":"travelBack()","details":"travelBack()"},
        {"trigger":"travelTo","contents":"travelTo(${1:date});","kind":["function","m","Method"],"annotation":"travelTo($date)","details":"travelTo($date)"},
        {"trigger":"viewData","contents":"viewData(${1:key});","kind":["function","m","Method"],"annotation":"viewData($key)","details":"viewData($key)"},
        {"trigger":"withBasicAuth","contents":"withBasicAuth(${1:string:username}, ${2:string:password});","kind":["function","m","Method"],"annotation":"withBasicAuth(string $username, string $password)","details":"withBasicAuth(string $username, string $password)"},
        {"trigger":"withCookie","contents":"withCookie(${1:string:name}, ${2:string:value});","kind":["function","m","Method"],"annotation":"withCookie(string $name, string $value)","details":"withCookie(string $name, string $value)"},
        {"trigger":"withCookies","contents":"withCookies(${1:array:cookies});","kind":["function","m","Method"],"annotation":"withCookies(array $cookies)","details":"withCookies(array $cookies)"},
        {"trigger":"withCredentials","contents":"withCredentials();","kind":["function","m","Method"],"annotation":"withCredentials()","details":"withCredentials()"},
        {"trigger":"withDeprecationHandling","contents":"withDeprecationHandling();","kind":["function","m","Method"],"annotation":"withDeprecationHandling()","details":"withDeprecationHandling()"},
        {"trigger":"withExceptionHandling","contents":"withExceptionHandling();","kind":["function","m","Method"],"annotation":"withExceptionHandling()","details":"withExceptionHandling()"},
        {"trigger":"withExceptions","contents":"withExceptions(${1:Illuminate\\Support\\Collection:exceptions});","kind":["function","m","Method"],"annotation":"withExceptions(Illuminate\\Support\\Collection $exceptions)","details":"withExceptions(Illuminate\\Support\\Collection $exceptions)"},
        {"trigger":"withHeader","contents":"withHeader(${1:string:name}, ${2:string:value});","kind":["function","m","Method"],"annotation":"withHeader(string $name, string $value)","details":"withHeader(string $name, string $value)"},
        {"trigger":"withHeaders","contents":"withHeaders(${1:array:headers});","kind":["function","m","Method"],"annotation":"withHeaders(array $headers)","details":"withHeaders(array $headers)"},
        {"trigger":"withMiddleware","contents":"withMiddleware($1);","kind":["function","m","Method"],"annotation":"withMiddleware($1)","details":"withMiddleware($1)"},
        {"trigger":"withMix","contents":"withMix();","kind":["function","m","Method"],"annotation":"withMix()","details":"withMix()"},
        {"trigger":"withServerVariables","contents":"withServerVariables(${1:array:server});","kind":["function","m","Method"],"annotation":"withServerVariables(array $server)","details":"withServerVariables(array $server)"},
        {"trigger":"withSession","contents":"withSession(${1:array:data});","kind":["function","m","Method"],"annotation":"withSession(array $data)","details":"withSession(array $data)"},
        {"trigger":"withToken","contents":"withToken(${1:string:token});","kind":["function","m","Method"],"annotation":"withToken(string $token)","details":"withToken(string $token)"},
        {"trigger":"withUnencryptedCookie","contents":"withUnencryptedCookie(${1:string:name}, ${2:string:value});","kind":["function","m","Method"],"annotation":"withUnencryptedCookie(string $name, string $value)","details":"withUnencryptedCookie(string $name, string $value)"},
        {"trigger":"withUnencryptedCookies","contents":"withUnencryptedCookies(${1:array:cookies});","kind":["function","m","Method"],"annotation":"withUnencryptedCookies(array $cookies)","details":"withUnencryptedCookies(array $cookies)"},
        {"trigger":"withViewErrors","contents":"withViewErrors(${1:array:errors});","kind":["function","m","Method"],"annotation":"withViewErrors(array $errors)","details":"withViewErrors(array $errors)"},
        {"trigger":"withVite","contents":"withVite();","kind":["function","m","Method"],"annotation":"withVite()","details":"withVite()"},
        {"trigger":"withoutDeprecationHandling","contents":"withoutDeprecationHandling();","kind":["function","m","Method"],"annotation":"withoutDeprecationHandling()","details":"withoutDeprecationHandling()"},
        {"trigger":"withoutExceptionHandling","contents":"withoutExceptionHandling($1);","kind":["function","m","Method"],"annotation":"withoutExceptionHandling($1)","details":"withoutExceptionHandling($1)"},
        {"trigger":"withoutMiddleware","contents":"withoutMiddleware($1);","kind":["function","m","Method"],"annotation":"withoutMiddleware($1)","details":"withoutMiddleware($1)"},
        {"trigger":"withoutMix","contents":"withoutMix();","kind":["function","m","Method"],"annotation":"withoutMix()","details":"withoutMix()"},
        {"trigger":"withoutMockingConsoleOutput","contents":"withoutMockingConsoleOutput();","kind":["function","m","Method"],"annotation":"withoutMockingConsoleOutput()","details":"withoutMockingConsoleOutput()"},
        {"trigger":"withoutToken","contents":"withoutToken();","kind":["function","m","Method"],"annotation":"withoutToken()","details":"withoutToken()"},
        {"trigger":"withoutVite","contents":"withoutVite();","kind":["function","m","Method"],"annotation":"withoutVite()","details":"withoutVite()"}
    ]
}
